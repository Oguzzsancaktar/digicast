{"version":3,"file":"static/js/230.e671b661.chunk.js","mappings":"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","sources":["../node_modules/react-feather/dist/icons/key.js","views/pages/LoginPage.tsx"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Key = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 2l-2 2m-7.61 7.61a5.5 5.5 0 1 1-7.778 7.778 5.5 5.5 0 0 1 7.777-7.777zm0 0L15.5 7.5m0 0l3 3L22 7l-3-3m-3.5 3.5L19 4\"\n  }));\n});\nKey.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nKey.displayName = 'Key';\nexport default Key;","import React, { useEffect, useMemo, useState } from 'react'\nimport { Key, User } from 'react-feather'\nimport { useNavigate } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Button, Center, CompanyLogo, InputWithIcon, JustifyBetweenColumn } from '../../components'\nimport colors from '../../constants/colors'\nimport { useAuth } from '../../hooks/useAuth'\nimport { EValidationFiedTypes, ILoginCredentials, IValidationItem } from '../../models'\nimport { handleInputChange } from '../../utils/handleValueChange'\nimport { validateFormFields } from '../../utils/validationUtils'\n\nconst PageContainer = styled.div`\n  ${Center}\n  width: 100vw;\n  height: 100vh;\n`\n\nconst LoginCard = styled.div`\n  border-radius: 0.3rem;\n  border: 1px solid ${colors.primary.dark};\n  padding: 1rem;\n  width: 600px;\n`\n\nconst FormContainer = styled.div`\n  height: 100%;\n\n  @media (max-width: 1100px) {\n    padding: 1rem;\n  }\n`\nconst FormLayout = styled.div`\n  ${JustifyBetweenColumn}\n  width: 100%;\n  height: 100%;\n`\n\nconst FormArea = styled.div`\n  height: auto;\n  width: 100%;\n`\n\nconst FormLogo = styled.div`\n  height: 200px;\n  width: 200px;\n  margin: auto;\n\n  @media (max-width: 1100px) {\n    height: 120px;\n    width: 120px;\n  }\n`\n\nconst FormItem = styled.div`\n  width: 100%;\n  margin: 1rem 0;\n`\n\nconst LoginPage = () => {\n  const navigate = useNavigate()\n  const {\n    tryLogin: { login, isLoginSuccessfull }\n  } = useAuth()\n\n  const [credentials, setCredentials] = useState<ILoginCredentials>({\n    username: 'admin',\n    password: 'adminadmin'\n  })\n\n  const [credentialsValidationsErrors, setCredentialsValidationsErrors] = useState({\n    usernameError: false,\n    passwordError: false\n  })\n\n  const loginValidationOptions: IValidationItem[] = useMemo(\n    () => [\n      {\n        fieldName: 'username',\n        fieldType: EValidationFiedTypes.STRING\n      },\n      {\n        fieldName: 'password',\n        fieldType: EValidationFiedTypes.STRING\n      }\n    ],\n    []\n  )\n\n  const handleSubmit = async (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    e.preventDefault()\n    try {\n      const validationResult = validateFormFields(loginValidationOptions, credentials, setCredentialsValidationsErrors)\n      if (validationResult) {\n        await login(credentials)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <PageContainer>\n      <LoginCard>\n        <FormContainer>\n          <FormLayout>\n            <FormArea>\n              <FormLogo>\n                <CompanyLogo />\n              </FormLogo>\n            </FormArea>\n\n            <FormArea>\n              <FormItem>\n                <InputWithIcon\n                  name=\"username\"\n                  type=\"text\"\n                  labelText=\"Kullanıcı Adı\"\n                  placeholder=\"Kullanıcı adınızı giriniz...\"\n                  value={credentials.username}\n                  onValueChange={event => handleInputChange(event, credentials, setCredentials)}\n                  children={<User size={20} />}\n                  color={credentialsValidationsErrors.usernameError ? colors.fourth.light : colors.secondary.dark}\n                />\n              </FormItem>\n              <FormItem>\n                <InputWithIcon\n                  name=\"password\"\n                  type=\"password\"\n                  labelText=\"Şifre\"\n                  placeholder=\"Telefon numaranızı giriniz...\"\n                  value={credentials.password}\n                  onValueChange={event => handleInputChange(event, credentials, setCredentials)}\n                  children={<Key size={20} />}\n                  color={credentialsValidationsErrors.passwordError ? colors.fourth.light : colors.secondary.dark}\n                />\n              </FormItem>\n            </FormArea>\n\n            <FormArea>\n              <FormItem>\n                <Button height=\"50px\" onClick={handleSubmit}>\n                  Giriş\n                </Button>\n              </FormItem>\n            </FormArea>\n          </FormLayout>\n        </FormContainer>\n      </LoginCard>\n    </PageContainer>\n  )\n}\n\nexport default LoginPage\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Key","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","propTypes","PropTypes","displayName","PageContainer","styled","Center","LoginCard","colors","FormContainer","FormLayout","JustifyBetweenColumn","FormArea","FormLogo","FormItem","useNavigate","useAuth","tryLogin","login","isLoginSuccessfull","useState","username","password","credentials","setCredentials","usernameError","passwordError","credentialsValidationsErrors","setCredentialsValidationsErrors","loginValidationOptions","useMemo","fieldName","fieldType","EValidationFiedTypes","handleSubmit","e","preventDefault","validateFormFields","console","error","name","type","labelText","placeholder","value","onValueChange","event","handleInputChange","children","onClick"],"sourceRoot":""}